
@model PagedList.IPagedList<WebAppOddsMatcherUtility.Models.matched_event>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/Content/Custom.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Matched";
}

    <div id="control_area">
        <div class="row">
            <div class="col-sm-12 col-md-6">
                <div id="bet_type_selector_group" class="btn-group btn-group-sm" role="group" aria-label="bet type" data-toggle="buttons">
                    <label class="btn btn-primary active"><input type="radio" name="bet_type_selector" id="bt_normal_qual" checked> Normal Qualifier</label>
                    <label class="btn btn-primary"><input type="radio" name="bet_type_selector" id="bt_free_no_return"> Free Bet Stake Not Returned (SNR)</label>
                    <label class="btn btn-primary"><input type="radio" name="bet_type_selector" id="bt_free_bet_returned"> Free Bet Stake Returned (SR)</label>
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="input-group input-group-sm">
                    <span class="input-group-addon" id="stake_amount">Stake Amount =</span>
                    <input type="text" class="form-control" id="stake_amount_val" name="stake_amount_val" aria-describedby="stake_amount">
                </div>
            </div>
            <div class="col-sm-6 col-md-3">
                <div class="input-group input-group-sm">
                    <span class="input-group-addon" id="exchange_balance">Exchange Balance =</span>
                    <input type="text" class="form-control" id="exchange_balance_val" name="exchange_balance_val" aria-describedby="exchange_balance">
                </div>
            </div>
        </div>
        <div class="row m-t-10">
            <div class="col-md-6">
                <div class="input-group input-group-sm">
                    @using (Html.BeginForm("Index", "matched_event", FormMethod.Get))
                    {
                    <span class="old-filters">@Html.DropDownList("SearchByBookmaker", null, "All bookmakers", new { @class = "form-control input-sm", @onchange="submitOldFilterForm(this);" })</span>
                    <span class="old-filters">@Html.DropDownList("SearchByMarketType", null, "All markets", new { @class = "form-control input-sm", @onchange = "submitOldFilterForm(this);" })</span>
                    <span class="old-filters">@Html.DropDownList("SearchByBack", null, "All back bets", new { @class = "form-control input-sm", @onchange = "submitOldFilterForm(this);" })</span>
                    <span class="old-filters">@Html.DropDownList("SearchBySize", null, "All sizes", new { @class = "form-control input-sm", @onchange = "submitOldFilterForm(this);" })</span>
                    }
                </div>
            </div>
            <div class="col-md-3">
                <div id="show_selector_group" class="btn-group btn-group-sm" role="group" aria-label="show type" data-toggle="buttons">
                    <label class="btn btn-primary active"><input type="radio" id="bt_show_arbs" name="show_selector" checked> Show Arbs 100+</label>
                    <label class="btn btn-primary"><input type="radio" id="bt_show_availability" name="show_selector"> Show Availability Only</label>
                </div>
            </div>
            <div class="col-md-3">
                <button type="button" class="btn btn-danger btn-sm pull-right m-l-10" onclick="myFunction()"><span class="glyphicon glyphicon-refresh"></span> Refresh</button>
                <button type="button" class="btn btn-success btn-sm pull-right" data-toggle="collapse" data-target="#filters_section"><span class="glyphicon glyphicon-filter"></span> Filters</button>
            </div>
        </div>
    </div>

    <div id="filters_section" class="collapse m-b-10">
        <div class="row">
            <div class="col-sm-6 col-md-2">
                <div class="panel panel-default m-t-10 m-b-10">
                    <div class="panel-heading">
                        <div class="checkbox">
                            <input type="checkbox" id="cb_sport_all" />
                            <label for="checkbox">
                                Sports
                            </label>
                        </div>
                    </div>
                    <div class="panel-body">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <div class="checkbox">
                                    <input type="checkbox" class="cb_sport" id="cb_sport_one" />
                                    <label for="checkbox">
                                        Sport 1
                                    </label>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="checkbox">
                                    <input type="checkbox" class="cb_sport" id="cb_sport_two" />
                                    <label for="checkbox">
                                        Sport 2
                                    </label>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div> <!-- /col-md-2 -->
            <div class="col-sm-6 col-md-2">
                <div class="panel panel-default m-t-10 m-b-10">
                    <div class="panel-heading">
                        <div class="checkbox">
                            <input type="checkbox" class="cb_market" id="cb_market_all" />
                            <label for="checkbox">
                                Market
                            </label>
                        </div>
                    </div>
                    <div class="panel-body">
                        <ul class="list-group">
                            @foreach (var market in ViewBag.FilterByMarketType)
                            {
                                <li class="list-group-item">
                                    <div class="checkbox">
                                        <!--
                                        TODO: need to uniquely name the check boxes
                                            (   and be able to set them all on or off from panel heading,
                                                and be able to post more than one value to server, and lots of other bits...    )
                                        -->
                                        <input type="checkbox" class="cb_market" id="cb_market_@Html.DisplayFor(modelItem => market)" />
                                        <label for="checkbox">
                                            @Html.DisplayFor(modelItem => market)
                                        </label>
                                    </div>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
            </div> <!-- /col-md-2 -->
            <div class="col-sm-6 col-md-2">
                <div class="panel panel-default m-t-10 m-b-10">
                    <div class="panel-heading">
                        <div class="checkbox">
                            <input type="checkbox" id="cb_bookmaker_all" />
                            <label for="checkbox">
                                Bookmaker
                            </label>
                        </div>
                    </div>
                    <div class="panel-body">
                        <ul class="list-group">
                            @foreach (var bookmaker in ViewBag.FilterByBookie)
                            {
                                <li class="list-group-item">
                                    <div class="checkbox">
                                        <!--
                                            TODO: need to uniquely name the check boxes
                                                (   and be able to set them all on or off from panel heading,
                                                    and be able to post more than one value to server, and lots of other bits...    )
                                            -->
                                        <input type="checkbox" class="cb_bookmaker" id="cb_bookmaker_@Html.DisplayFor(modelItem => bookmaker)" />
                                        <label for="checkbox">
                                            @Html.DisplayFor(modelItem => bookmaker)
                                        </label>
                                    </div>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
            </div> <!-- /col-md-2 -->
            <div class="col-sm-6 col-md-2">
                <div class="panel panel-default m-t-10 m-b-10">
                    <div class="panel-heading">
                        <div class="checkbox">
                            <input type="checkbox" class="cb_exchange" id="cb_exchange_all" />
                            <label for="checkbox">
                                Exchange
                            </label>
                        </div>
                    </div>
                    <div class="panel-body">
                        <ul class="list-group">
                            <li class="list-group-item">
                                <div class="checkbox">
                                    <input type="checkbox" class="cb_exchange" id="cb_exchange_one" />
                                    <label for="checkbox">
                                        Exchange 1
                                    </label>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="checkbox">
                                    <input type="checkbox" class="cb_exchange" id="cb_exchange_two" />
                                    <label for="checkbox">
                                        Exchange 2
                                    </label>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="checkbox">
                                    <input type="checkbox" class="cb_exchange" id="cb_exchange_three" />
                                    <label for="checkbox">
                                        Exchange 3
                                    </label>
                                </div>
                            </li>
                            <li class="list-group-item">
                                <div class="checkbox">
                                    <input type="checkbox" class="cb_exchange" id="cb_exchange_four" />
                                    <label for="checkbox">
                                        Exchange 4
                                    </label>
                                </div>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>  <!-- /col-md-2 -->
            <div class="col-sm-12 col-md-4">
                <div class="row">
                    <div class="col-sm-6 col-md-6">
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <div class="checkbox">
                                    <input type="checkbox" id="cb_min_rating" name="cb_min_rating_filter"/>
                                    <label for="checkbox">
                                        Min. Rating
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <input class="form-control" id="val_min_rating" placeholder="Min." name="tx_min_rating_filter"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <div class="checkbox">
                                    <input type="checkbox" id="cb_min_odds" name="cb_min_odds_filter"/>
                                    <label for="checkbox">
                                        Min. Odds
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <input class="form-control" id="val_min_odds" placeholder="Min." name="tx_min_odds_filter"/>
                            </div>
                        </div>

                    </div>
                    <div class="col-sm-6 col-md-6">
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <div class="checkbox">
                                    <input type="checkbox" id="cb_max_rating" name="cb_max_rating_filter"/>
                                    <label for="checkbox">
                                        Max. Rating
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <input class="form-control" id="val_max_rating" placeholder="Max." name="tx_max_rating_filter"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <div class="checkbox">
                                    <input type="checkbox" id="cb_max_odds" name="cb_max_odds_filter"/>
                                    <label for="checkbox">
                                        Max. Odds
                                    </label>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-md-12">
                                <input class="form-control" id="val_max_odds" placeholder="Max." name="tx_max_odds_filter"/>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-12">
                        <div class="checkbox">
                            <input type="checkbox" id="cb_min_availability" name="cb_min_availability_filter"/>
                            <label for="checkbox">
                                Min. Availability
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-12">
                        <div class="input-group">
                            <span class="input-group-addon" id="min-avail-addon">£</span>
                            <input class="form-control" id="val_min_availability" aria-describedby="min-avail-addon" name="tx_min_availability_filter" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-12">
                        <div class="checkbox">
                            <input type="checkbox" id="cb_limit_time" name="cb_limit_time_filter"/>
                            <label for="checkbox">
                                Limit Timeframe
                            </label>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm-12 col-md-12">
                        @*see https://github.com/seiyria/bootstrap-slider example #13*@
                        @*<input id="timeframe" type="text" data-provide="slider" data-slider-tooltip="hide" data-slider-ticks="[0, 1, 2, 3, 4, 5, 6 ,7]" data-slider-ticks-snap-bounds="30" data-slider-ticks-labels='["Now", "30mins", "1hr", "12hrs", "1day","3days","7days","No limit"]' data-slider-step="1" />*@
                        <div id="timeframe_group" class="btn-group btn-group-xs" role="group" aria-label="Timeframe" data-toggle="buttons">
                            <label class="btn btn-primary active"><input type="radio" id="bt_now_time_filter" name="timeframe" checked> Now</label>
                            <label class="btn btn-primary"><input type="radio" id="bt_30m_time_filter" name="timeframe"> 30 mins</label>
                            <label class="btn btn-primary"><input type="radio" id="bt_1h_time_filter" name="timeframe"> 1 hr</label>
                            <label class="btn btn-primary"><input type="radio" id="bt_12h_time_filter" name="timeframe"> 12 hrs</label>
                            <label class="btn btn-primary"><input type="radio" id="bt_1d_time_filter" name="timeframe"> 1 day</label>
                            <label class="btn btn-primary"><input type="radio" id="bt_3d_time_filter" name="timeframe"> 3 days</label>
                            <label class="btn btn-primary"><input type="radio" id="bt_7d_time_filter" name="timeframe"> 7 days</label>
                            <label class="btn btn-primary"><input type="radio" id="bt_no_time_filter" name="timeframe"> None</label>
                        </div>
                    </div>
                </div>
            </div> <!-- /col-md-4 -->
        </div> <!-- /row -->
        <div class="row m-t-10">
            <div class="col-sm-8 col-md-8">
                <div class="input-group">
                    <span class="input-group-addon" id="search-addon"><span class="glyphicon glyphicon-search"></span></span>
                    <input id="search_filter" name="search_filter" aria-describedby="search-addon" class="form-control" placeholder="Search by team name, horse name, league name, output (i.e. 0-0)" />
                </div>
            </div>
            <div class="col-sm-4 col-md-4">
                <button class="btn btn-primary"><span class="glyphicon glyphicon-ok"></span> Apply</button>
                <div class="pull-right">
                    <button class="btn btn-default"><span class="glyphicon glyphicon-minus-sign"></span> Clear Filters</button>
                </div>
            </div>
        </div>
    </div> <!-- /#filters_section -->

@if (Model.Count > 0)
{
    <div id="table_section">
        <div class="row">
            <div class="col-md-12">
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                @Html.ActionLink("Event Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                            <th>
                                Sport
                            </th>
                            <th>
                                @Html.ActionLink("Details", "Index", new { sortOrder = ViewBag.DetailsSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                            <th>
                                @Html.ActionLink("Bet", "Index", new { sortOrder = ViewBag.BetSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                            <th>
                                @Html.ActionLink("Market", "Index", new { sortOrder = ViewBag.MarketSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                            <th>
                                @Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                            <th>
                                Profit
                            </th>
                            <th>
                                <div class="split-cell">
                                    @Html.ActionLink("Bookmaker", "Index", new { sortOrder = ViewBag.BookmakerSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                                </div>
                                <div>
                                    @Html.ActionLink("Exchange", "Index", new { sortOrder = ViewBag.ExchangeSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                                </div>
                            </th>
                            <th>
                                @Html.ActionLink("Back", "Index", new { sortOrder = ViewBag.BackSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                            <th>
                                @Html.ActionLink("Lay", "Index", new { sortOrder = ViewBag.LaySortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                            <th>
                                @Html.ActionLink("Size", "Index", new { sortOrder = ViewBag.SizeSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter })
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.ValueFor(modelItem => item.eventDate, "{0:dd/MM/yyyy HH:mm}")
                                </td>
                                <td>
                                    <img src=@Html.DisplayFor(modelItem => item.sport) alt="Football" data-toggle="popover" title="Football league Premiership">
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.details)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.betName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.marketName)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.rating)
                                </td>
                                <td>
                                    <!-- Button trigger modal -->
                                    <button type="button" class="btn btn-xs btn-primary profit-btn" data-toggle="modal" data-target="#exampleModal"
                                            data-event="@Html.DisplayFor(modelItem => item.details)"
                                            data-event-date="@Html.ValueFor(modelItem => item.eventDate, "{0:dd/MM/yyyy HH:mm}")"
                                            data-back-odds=@Html.DisplayFor(modelItem => item.back)
                                            data-back-comm="0.00"
                                            data-lay-odds=@Html.DisplayFor(modelItem => item.lay)
                                            data-lay-comm="0.05"
                                            data-bookmaker-name="@Html.DisplayFor(modelItem => item.bookmaker_name)"
                                            data-exchange-name="Betfair Exchange"
                                            data-market-name="@Html.DisplayFor(modelItem => item.marketName)"
                                            data-bet-name="@Html.DisplayFor(modelItem => item.betName)">
                                        <span class="glyphicon glyphicon-gbp"></span>
                                    </button>
                                </td>

                                <td class="text-center">
                                    <div class="split-cell p-b-10 m-b-10">
                                        <img src=@Html.DisplayFor(modelItem => item.bookmaker) alt="Bookmaker">
                                    </div>
                                    <div>
                                        <img src=@Html.DisplayFor(modelItem => item.exchange) alt="Exchange">
                                    </div>
                                </td>
                                <td>
                                    <span class="back-highlight">@Html.DisplayFor(modelItem => item.back)</span>
                                </td>
                                <td>
                                    <span class="lay-highlight">@Html.DisplayFor(modelItem => item.lay)</span>
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(modelItem => item.size)
                                </td>
                            </tr>
                        }
                    </tbody>

                </table>

                <div id='Paging' class="text-center">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter, searchByMarketType = ViewBag.MarketTypeFilter, searchByBack = ViewBag.BackFilter, searchBySize = ViewBag.SizeFilter }))
                </div>
            </div>
        </div>
    </div>

    <!-- Button trigger modal formatting -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    @*<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>*@
                    <h4 class="modal-title" id="exampleModalLabel">Profit Calculator</h4>
                </div>
                <div class="modal-body">
                    <div class="p-b-10">
                        <label class="radio-inline">
                            <input type="radio" tabindex="-1" name="inlineRadioOptions" id="inlineRadioQualifier" value="optionQualifier" data-toggle="tooltip" data-placement="top" title="Qualifying Bet"> Qualifier
                        </label>
                        <label class="radio-inline p-l-40">
                            <input type="radio" tabindex="-1" name="inlineRadioOptions" id="inlineRadioSNR" value="optionSNR" data-toggle="tooltip" data-placement="top" title="Free Bet, Stake Not Returned"> Free Bet SNR
                        </label>
                        <label class="radio-inline p-l-40">
                            <input type="radio" tabindex="-1" name="inlineRadioOptions" id="inlineRadioSR" value="optionSR" data-toggle="tooltip" data-placement="top" title="Free Bet, Stake Returned"> Free Bet SR
                        </label>
                    </div>
                    <div class="p-b-10">
                    </div>
                    <div>
                        <form>
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label for="stake" class="control-label">Stake</label>
                                        <input type="text" class="form-control white-on-black" onchange="changeStakeFunction()" id="stake" data-toggle="tooltip" data-placement="top" title="Enter Stake, then hit <Enter> or <Tab> key to calculate">
                                    </div>
                                    <div class="col-md-9">
                                        <label for="event-name" class="control-label">Event</label>
                                        <input type="text" readonly tabindex="-1" class="form-control" id="event-name">
                                    </div>
                                </div>
                            </div>
                            <div class="row p-t-20">
                                <div class="form-group">
                                    <div class="col-md-4">
                                        <label for="event-date" class="control-label">Date</label>
                                        <input type="text" readonly tabindex="-1" class="form-control" id="event-date">
                                    </div>
                                    <div class="col-md-4">
                                        <label for="bet-name" class="control-label">Bet</label>
                                        <input type="text" readonly tabindex="-1" class="form-control" id="bet-name">
                                    </div>
                                    <div class="col-md-4">
                                        <label for="market-name" class="control-label">Market</label>
                                        <input type="text" readonly tabindex="-1" class="form-control" id="market-name">
                                    </div>
                                </div>
                            </div>
                            <a>&nbsp;</a>
                            <div class="row p-b-10 bg-light-blue">
                                <div class="form-group">
                                    <div class="col-md-3 bg-light-blue">
                                        <label for="back-odds" class="control-label">Back Odds</label>
                                        <input type="text" readonly tabindex="-1" class="form-control text-right" id="back-odds">
                                    </div>
                                    <div class="col-md-3 bg-light-blue">
                                        <label for="back-comm" class="control-label">Back Comm</label>
                                        <input type="text" tabindex="-1" class="form-control text-right" id="back-comm">
                                    </div>
                                    <div class="col-md-6 bg-light-blue">
                                        <label for="bookmaker-name" class="control-label">Bookmaker</label>
                                        <input type="text" readonly tabindex="-1" class="form-control" id="bookmaker-name">
                                    </div>
                                </div>
                                <br />
                            </div>
                            <div class="p-t-10">
                                <div class="row p-b-10 bg-pink">
                                    <div class="form-group">
                                        <div class="col-md-3 bg-pink">
                                            <label for="lay-odds" class="control-label">Lay Odds</label>
                                            <input type="text" readonly tabindex="-1" class="form-control text-right" id="lay-odds">
                                        </div>
                                        <div class="col-md-3 bg-pink">
                                            <label for="lay-comm" class="control-label">Lay Comm</label>
                                            <input type="text" tabindex="-1" class="form-control text-right" id="lay-comm">
                                        </div>
                                        <div class="col-md-6 bg-pink">
                                            <label for="exchange-name" class="control-label">Exchange</label>
                                            <input type="text" readonly tabindex="-1" class="form-control" id="exchange-name">
                                        </div>
                                    </div>
                                </div>
                                <div class="row p-b-10 bg-pink">
                                    <div class="form-group">
                                        <div class="col-md-3">
                                            <label for="lay-amount" class="control-label">You Lay</label>
                                            <input type="text" readonly tabindex="-1" class="form-control text-right" id="lay-amount">
                                        </div>
                                        <div class="col-md-3">
                                            <label for="liability-amount" class="control-label">Liability</label>
                                            <input type="text" readonly tabindex="-1" class="form-control text-right" id="liability-amount">
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </form>
                    </div>
                    <div class="p-t-10">
                        <table class="table">
                            <tr>
                                <th>
                                    Result
                                </th>
                                <th>
                                    Bookmaker Bal
                                </th>
                                <th>
                                    Exchange Bal
                                </th>
                                <th>
                                    Bet Profit
                                </th>
                            </tr>
                            <tr>
                                <td>
                                    Bookmaker Win
                                </td>
                                <td>
                                    <input type="text" readonly tabindex="-1" class="form-control text-center" id="bookie-win-bbal">
                                </td>
                                <td>
                                    <input type="text" readonly tabindex="-1" class="form-control text-center" id="bookie-win-xbal">
                                </td>
                                <td>
                                    <input type="text" readonly tabindex="-1" class="form-control text-center" id="bookie-win-profit">
                                </td>
                            </tr>
                            <tr>
                                <td>
                                    Exchange Win
                                </td>
                                <td>
                                    <input type="text" readonly tabindex="-1" class="form-control text-center" id="exchange-win-bbal">
                                </td>
                                <td>
                                    <input type="text" readonly tabindex="-1" class="form-control text-center" id="exchange-win-xbal">
                                </td>
                                <td>
                                    <input type="text" readonly tabindex="-1" class="form-control text-center" id="exchange-win-profit">
                                </td>
                            </tr>
                        </table>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary">Calculate</button>
                    <button type="button" class="btn btn-default" tabindex="-1" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

else
{
    if (string.IsNullOrEmpty(ViewBag.CurrentFilter) &&
    string.IsNullOrEmpty(ViewBag.BookmakerFilter) &&
    string.IsNullOrEmpty(ViewBag.ViewBag.BackFilter) &&
    string.IsNullOrEmpty(ViewBag.ViewBag.BackFilter))
    {
        <p> There are no events on the database.</p>
    }
    else
    {
        <p> There are no matches for the filter.</p>
    }
}

            <script>
                function myFunction() {
                    location.reload();
                }
            </script>

            <script>
                $(document).ready(function () {
                    $('[data-toggle="popover"]').popover();
                    // filter check boxes initally all set to ticked
                    $('#cb_sport_all').prop('checked', true);
                    $('.cb_sport').prop('checked', true);
                    $('#cb_market_all').prop('checked', true);
                    $('.cb_market').prop('checked', true);
                    $('#cb_bookmaker_all').prop('checked', true);
                    $('.cb_bookmaker').prop('checked', true);
                    $('#cb_exchange_all').prop('checked', true);
                    $('.cb_exchange').prop('checked', true);

                    // click / change handlers for setting the 'all' filter tick boxes
                    $('#cb_sport_all').click(function () {
                        $('.cb_sport').prop('checked', this.checked);
                    });
                    $('#cb_market_all').click(function () {
                        $('.cb_market').prop('checked', this.checked);
                    });
                    $('#cb_bookmaker_all').click(function () {
                        $('.cb_bookmaker').prop('checked', this.checked);
                    });
                    $('#cb_exchange_all').click(function () {
                        $('.cb_exchange').prop('checked', this.checked);
                    });

                    $('.cb_sport').change(function () {
                        var check = ($('.cb_sport').filter(":checked").length == $('.cb_sport').length);
                        $('#cb_sport_all').prop('checked', check);
                    });
                    $('.cb_market').change(function () {
                        var check = ($('.cb_market').filter(":checked").length == $('.cb_market').length);
                        $('#cb_market_all').prop('checked', check);
                    });
                    $('.cb_bookmaker').change(function () {
                        var check = ($('.cb_bookmaker').filter(":checked").length == $('.cb_bookmaker').length);
                        $('#cb_bookmaker_all').prop('checked', check);
                    });
                    $('.cb_exchange').change(function () {
                        var check = ($('.cb_exchange').filter(":checked").length == $('.cb_exchange').length);
                        $('#cb_exchange_all').prop('checked', check);
                    });

                });

                function submitOldFilterForm(selectObj)
                {
                    selectObj.form.submit();
                }

            </script>

            <script>
                $('#exampleModal').on('shown.bs.modal', function (event) {

                    // Set-up variables from modal screen
                    var button = $(event.relatedTarget) // Button that triggered the modal
                    var scriptEvent = button.data('event')
                    var scriptEventDate = button.data('event-date')
                    var scriptStake = button.data('stake')
                    var scriptOdds = button.data('back-odds')
                    var scriptComm = button.data('back-comm')
                    var scriptBookmakerName = button.data('bookmaker-name')
                    var scriptLayOdds = button.data('lay-odds')
                    var scriptLayComm = button.data('lay-comm')
                    var scriptExchangeName = button.data('exchange-name')
                    var scriptMarketName = button.data('market-name')
                    var scriptBetName = button.data('bet-name')

                    var modal = $(this)
                    modal.find('.modal-body #event-name').val(scriptEvent)
                    modal.find('.modal-body #textareaID').val(scriptEvent)
                    modal.find('.modal-body #event-date').val(scriptEventDate)
                    modal.find('.modal-body #stake').val(scriptStake)
                    modal.find('.modal-body #back-odds').val(scriptOdds)
                    modal.find('.modal-body #back-comm').val(scriptComm)
                    modal.find('.modal-body #bookmaker-name').val(scriptBookmakerName)
                    modal.find('.modal-body #lay-odds').val(scriptLayOdds)
                    modal.find('.modal-body #lay-comm').val(scriptLayComm)
                    modal.find('.modal-body #exchange-name').val(scriptExchangeName)
                    modal.find('.modal-body #market-name').val(scriptMarketName)
                    modal.find('.modal-body #bet-name').val(scriptBetName)

                    // Set blank values for calculated fields
                    modal.find('.modal-body #lay-amount').val('')
                    modal.find('.modal-body #liability-amount').val('')
                    modal.find('.modal-body #bookie-win-bbal').val('')
                    modal.find('.modal-body #bookie-win-xbal').val('')
                    modal.find('.modal-body #bookie-win-profit').val('')
                    modal.find('.modal-body #exchange-win-bbal').val('')
                    modal.find('.modal-body #exchange-win-xbal').val('')
                    modal.find('.modal-body #exchange-win-profit').val('')


                    // Select "Qualifier" radio button
                    $('#inlineRadioQualifier').prop('checked', true);

                    // Set focus to
                    $('#stake').focus();

                })
            </script>

            <script>
                $(function () {

                    $('#exampleModal').on('change', function () {

                        var objectTrigger = $(event.relatedTarget) // Button that triggered the modal

                        var radio = jQuery('input[name="inlineRadioOptions"]:checked');
                        var radioButtonvalue = radio.val();

                        var scriptStake = document.getElementById("stake").value;
                        var scriptBackOdds = document.getElementById("back-odds").value;
                        var scriptBackComm = document.getElementById("back-comm").value;
                        var scriptLayOdds = document.getElementById("lay-odds").value;
                        var scriptLayComm = document.getElementById("lay-comm").value;

                        //
                        // Calculate Qualifier
                        //
                        if (radioButtonvalue == "optionQualifier") {

                            // Calculate Lay bet
                            // E3/(E4-F4)*D3
                            var resultLayBet = scriptBackOdds / (scriptLayOdds - scriptLayComm) * scriptStake;
                            document.getElementById("lay-amount").value = resultLayBet.toFixed(2);

                            // Calculate Liability
                            // D4*(E4-1))
                            var resultLiability = resultLayBet * (scriptLayOdds - 1);
                            document.getElementById("liability-amount").value = resultLiability.toFixed(2);

                            //
                            // Bookmaker Win
                            //
                            // Bookie Balance
                            // D3 * (E3 - 1) * (1 - F3)
                            var resultBookmakerWinBB = scriptStake * (scriptBackOdds - 1) * (1 - scriptBackComm)
                            document.getElementById("bookie-win-bbal").value = resultBookmakerWinBB.toFixed(2);

                            // Exchange Balance
                            var resultBookmakerWinXB = resultLiability * -1
                            document.getElementById("bookie-win-xbal").value = resultBookmakerWinXB.toFixed(2);

                            // Profit
                            // K3-G3
                            var resultBookmakerWinProfit = resultBookmakerWinBB + resultBookmakerWinXB
                            document.getElementById("bookie-win-profit").value = resultBookmakerWinProfit.toFixed(2);

                            //
                            // Exchange Win
                            //
                            // Exchange Balance
                            // -1 * D3
                            var resultExchangeWinBB = -1 * scriptStake;
                            document.getElementById("exchange-win-bbal").value = resultExchangeWinBB.toFixed(2);

                            // Exchange Balance
                            // D4*(1-F4)
                            var resultExchangeWinXB = resultLayBet * (1 - scriptLayComm)
                            document.getElementById("exchange-win-xbal").value = resultExchangeWinXB.toFixed(2);

                            // Profit
                            // K4-D3
                            var resultExchangeWinProfit = resultExchangeWinXB + resultExchangeWinBB
                            document.getElementById("exchange-win-profit").value = resultExchangeWinProfit.toFixed(2);

                        }

                        //
                        // Calculate optionSNR
                        //
                        if (radioButtonvalue == "optionSNR") {

                            // Calculate Lay bet
                            //(E3-1)/(E4-F4)*D3
                            var resultLayBet = (scriptBackOdds - 1) / (scriptLayOdds - scriptLayComm) * scriptStake;
                            document.getElementById("lay-amount").value = resultLayBet.toFixed(2);

                            // Calculate Liability
                            // D4*(E4-1))
                            var resultLiability = resultLayBet * (scriptLayOdds - 1);
                            document.getElementById("liability-amount").value = resultLiability.toFixed(2);

                            //
                            // Bookmaker Win
                            //
                            // Bookie Balance
                            // D3 * (E3 - 1) * (1 - F3)
                            var resultBookmakerWinBB = scriptStake * (scriptBackOdds - 1) * (1 - scriptBackComm)
                            document.getElementById("bookie-win-bbal").value = resultBookmakerWinBB.toFixed(2);

                            // Exchange Balance
                            var resultBookmakerWinXB = resultLiability * -1
                            document.getElementById("bookie-win-xbal").value = resultBookmakerWinXB.toFixed(2);

                            // Profit
                            var resultBookmakerWinProfit = resultBookmakerWinBB + resultBookmakerWinXB
                            document.getElementById("bookie-win-profit").value = resultBookmakerWinProfit.toFixed(2);

                            //
                            // Exchange Win
                            //
                            // Exchange Balance
                            var resultExchangeWinBB = 0
                            document.getElementById("exchange-win-bbal").value = resultExchangeWinBB.toFixed(2);

                            // Exchange Balance
                            // D4*(1-F4)
                            var resultExchangeWinXB = resultLayBet * (1 - scriptLayComm)
                            document.getElementById("exchange-win-xbal").value = resultExchangeWinXB.toFixed(2);

                            // Profit
                            var resultExchangeWinProfit = resultExchangeWinXB
                            document.getElementById("exchange-win-profit").value = resultExchangeWinProfit.toFixed(2);

                        }

                        //
                        // Calculate optionSR
                        //
                        if (radioButtonvalue == "optionSR") {

                            // Calculate Lay bet
                            // E3/(E4-F4)*D3
                            var resultLayBet = scriptBackOdds / (scriptLayOdds - scriptLayComm) * scriptStake;
                            document.getElementById("lay-amount").value = resultLayBet.toFixed(2);

                            // Calculate Liability
                            // D4*(E4-1))
                            var resultLiability = resultLayBet * (scriptLayOdds - 1);
                            document.getElementById("liability-amount").value = resultLiability.toFixed(2);

                            //
                            // Bookmaker Win
                            //
                            // Bookie Balance
                            // D3*E3*(1-F3)
                            var resultBookmakerWinBB = scriptStake * scriptBackOdds * (1 - scriptBackComm)
                            document.getElementById("bookie-win-bbal").value = resultBookmakerWinBB.toFixed(2);

                            // Exchange Balance
                            var resultBookmakerWinXB = resultLiability * -1
                            document.getElementById("bookie-win-xbal").value = resultBookmakerWinXB.toFixed(2);

                            // Profit
                            // K3+D3+K4
                            var resultBookmakerWinProfit = resultBookmakerWinBB + resultBookmakerWinXB + (1 * scriptStake)
                            document.getElementById("bookie-win-profit").value = resultBookmakerWinProfit.toFixed(2);

                            //
                            // Exchange Win
                            //
                            // Exchange Balance
                            var resultExchangeWinBB = 0
                            document.getElementById("exchange-win-bbal").value = resultExchangeWinBB.toFixed(2);

                            // Exchange Balance
                            // D4*(1-F4)
                            var resultExchangeWinXB = resultLayBet * (1 - scriptLayComm)
                            document.getElementById("exchange-win-xbal").value = resultExchangeWinXB.toFixed(2);

                            // Profit
                            var resultExchangeWinProfit = resultExchangeWinXB
                            document.getElementById("exchange-win-profit").value = resultExchangeWinProfit.toFixed(2);

                        }

                        // Colour the Bet Profit fields red when not a profit
                        if (resultBookmakerWinProfit < 0) {
                            var targetbox = document.getElementById("bookie-win-profit");
                            targetbox.style.backgroundColor = "red"
                            targetbox.style.color = "white"
                        }
                        if (resultExchangeWinProfit < 0) {
                            var targetbox = document.getElementById("exchange-win-profit");
                            targetbox.style.backgroundColor = "red"
                            targetbox.style.color = "white"
                        }

                        // Colour the Bet Profit fields Green when a profit
                        if (resultBookmakerWinProfit > 0) {
                            var targetbox = document.getElementById("bookie-win-profit");
                            targetbox.style.backgroundColor = "green"
                            targetbox.style.color = "white"
                        }
                        if (resultExchangeWinProfit > 0) {
                            var targetbox = document.getElementById("exchange-win-profit");
                            targetbox.style.backgroundColor = "green"
                            targetbox.style.color = "white"
                        }


                    });

                });
            </script>

            <script>
                $('#exampleModal').on('hidden.bs.modal', function (e) {


                    $(this).data('bs.modal', null);

                })
            </script>
