
@model PagedList.IPagedList<WebAppOddsMatcherUtility.Models.matched_event>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
    $(document).ready(function () {
        //for table row
        $("tr:even").css("background-color", "#A8A8A8");
        $("tr:odd").css("background-color", "#FFFFFF");

    });
</script>

@{
    ViewBag.Title = "Matched";
}

@*<h2>Odds Comparison Utility</h2>*@


@using (Html.BeginForm("Index", "matched_event", FormMethod.Get))
{
    <div class="container">
        <div class="row">
            <div class="col-md-3">
                <p>
                    <a href="#" class="btn btn-success btn-lg" onclick="myFunction()"><span class="glyphicon glyphicon-refresh"> </span></a>
                </p>
            </div>
            <div class="col-md-6">
                <p>
                    <b>
                        Bookmaker: @Html.DropDownList("SearchByBookmaker", "All bookmakers")
                    </b>
                    <input class="btn btn-info" type="submit" value="Filter" />
                </p>
            </div>
        </div>
    </div>
}
@if (Model.Count > 0)
{
    <table class="table">
        <tr>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Event Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #000000; background: #effea5;">
                Sport
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Details", "Index", new { sortOrder = ViewBag.DetailsSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Bet", "Index", new { sortOrder = ViewBag.BetSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Market", "Index", new { sortOrder = ViewBag.MarketSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #000000; background: #effea5;">
                Info
            </th>
            <th style="color: #fff; background: #effea5; text-align:center">
                @Html.ActionLink("Bookmaker", "Index", new { sortOrder = ViewBag.BookmakerSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Back", "Index", new { sortOrder = ViewBag.BackSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Exchange", "Index", new { sortOrder = ViewBag.ExchangeSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Lay", "Index", new { sortOrder = ViewBag.LaySortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
            <th style="color: #fff; background: #effea5;">
                @Html.ActionLink("Size", "Index", new { sortOrder = ViewBag.SizeSortParm, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter })
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.ValueFor(modelItem => item.eventDate, "{0:dd/MM/yyyy HH:mm}")
                </td>
                <td>
                    <img src=@Html.DisplayFor(modelItem => item.sport) alt="Football">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.details)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.betName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.marketName)
                </td>
                <td style="text-align:center">
                    @Html.DisplayFor(modelItem => item.rating)
                </td>
                <td>
                    <img src=@Html.DisplayFor(modelItem => item.info) alt="Infomation">
                </td>
                <td style="text-align:center">
                    <img src=@Html.DisplayFor(modelItem => item.bookmaker) alt="Bookmaker">
                </td>
                <td style="background-color:#d7ecfa !important;
                     color:#404040;
                     background-image: none !important;
                     text-decoration: none !important;
                     border-radius: 5px;
                     padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px;
                     border-radius: 5px;
                     width: 50px;
                     display: inline-block;
                     text-align: center;">@Html.DisplayFor(modelItem => item.back)
                </td>
                <td>
                    <img src=@Html.DisplayFor(modelItem => item.exchange) alt="Exchange">
                </td>
                <td style="background-color:#fddee5 !important;
                     color:#404040;
                     background-image: none !important;
                     text-decoration: none !important;
                     border-radius: 5px;
                     padding-top: 5px; padding-right: 5px; padding-bottom: 5px; padding-left: 5px;
                     border-radius: 5px;
                     width: 50px;
                     display: inline-block;
                     text-align: center;">@Html.DisplayFor(modelItem => item.lay)
                </td>
                <td style="text-align:center">
                    @Html.DisplayFor(modelItem => item.size)
                </td>
            </tr>
        }

    </table>
    <br />
    <div id='Paging' style="text-align: center">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, searchByBookmaker = ViewBag.BookmakerFilter}))
    </div>
}

else
{
    if (string.IsNullOrEmpty(ViewBag.CurrentFilter) &&
    string.IsNullOrEmpty(ViewBag.BookmakerParam) &&
    string.IsNullOrEmpty(ViewBag.RatingParam ))
    {
        < p > There aren´t any product created.</ p >
    }
    else
    {
        < p > There aren´t any product for the selected search.</ p >
    }
}

<script>
    function myFunction() {
        location.reload();
    }
</script>
